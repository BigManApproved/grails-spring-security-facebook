h1. Basic Configuration

{note}
Make sure that you have installed and configured spring-security-core plugin before this step.
{note}

Calling `grails s2-init-facebook` will make default configuration of plugin for you, make sure
that you have configuration in your `Config.groovy` like:

{code}
grails.plugins.springsecurity.facebook.domain.classname='<your FacebookUser domain>'
grails.plugins.springsecurity.facebook.secret = '<Facebook secret for your app>'
grails.plugins.springsecurity.facebook.appId = '<Facebooks's app ID>'
{code}

Or you can skip `grails s2-init-facebook` step, and make such configuration by yourself.

When you have valid configuration you can put Facebook Connect button in you GSP:
{code}
<facebookAuth:connect permissions="email,user_about_me"/>
{code}

You don't need to add anything else.

h1. All configuration options

h2. Facebook App Config

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.secret | must be specified
grails.plugins.springsecurity.facebook.appId | must be specified
{table}

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.permissions | ['email']
{table}

List of required permissions, see [https://developers.facebook.com/docs/reference/login/#permissions|https://developers.facebook.com/docs/reference/login/#permissions]

h2. Domains

{table}
*Name* | *Default Value* | *Values*
grails.plugins.springsecurity.facebook.domain.classname | 'FacebookUser' |
grails.plugins.springsecurity.facebook.domain.relation | null | 'SameObject', 'JoinedUser'
grails.plugins.springsecurity.facebook.domain.appUserConnectionPropertyName | 'user' |
{table}

 * @domain.classname@ - name of your domain class, used to store Facebook User details (uid, access_token, etc)
 * @domain.relation@ - configure how your domains are connected, required only if you didn't specify your domains names (useful when you have your own FacebookAuthService, but still using some methods from default Dao)

Relation Types:
 * 'SameObject' is used when you are using same domain for Spring Security Core and for Facebook.
 * 'JoinedUser' is used when you want to store Facebook Authentication details in its own domain.

If you're using 'JoinedUser' you should specify @domain.appUserConnectionPropertyName@: it's how your domain class is related
to main (used by Spring Security Core) user domain. It's the name
of the property, usually defined as @static belongsTo = [user: User]@ in your Facebook User domain class (where
@User@ is a Spring Security core user domain, and @user@ is property name, that you should specify here

h2. Login Button

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.taglib.button.text | 'Login with Facebook'
grails.plugins.springsecurity.facebook.taglib.button.defaultImg | '/images/connect.png'
{table}

 * @button.text@ is used for client-side authentication only (using Facebook JS SDK).

h2. User creation/initialization

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.autoCreate.roleNames | ['ROLE_USER', 'ROLE_FACEBOOK']
{table}

List of roles for user created by the plugin.

h2. Filters

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.filter.processUrl | '/j_spring_security_facebook_check'
grails.plugins.springsecurity.facebook.filter.type | 'redirect'
{table}

 * @type@ - type of authentication, can be @transparent@, @cookieDirect@, @redirect@ or @json@.

You can specify list of filters as: @['redirect', 'json']@ or comma-separated string:
{code}
grails.plugins.springsecurity.facebook.filter.type='redirect,json'
{code}

h4. Configuration for REDIRECT filter

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.filter.redirect.processUrl | not set
grails.plugins.springsecurity.facebook.filter.redirect.redirectFromUrl | '/j_spring_security_facebook_redirect'
grails.plugins.springsecurity.facebook.filter.redirect.failureHandler | not set
grails.plugins.springsecurity.facebook.filter.redirect.successHandler | not set
{table}

 * @redirectFromUrl@ - it's the url that will redirect user to special Facebook Authentication URL. You can put link to/redirect user to @redirectFromUrl@ when you want to use Facebook authentication. This url is used by default @<facebook:connect />@ button.
 * if @filter.redirect.processUrl@ is not then, then default @filter.processUrl@ will be used
 * @failureHandler@ - a name of the bean that implements [AuthenticationFailureHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/AuthenticationFailureHandler.html]
 * @successHandler@ - a name of the bean that implements [AuthenticationSuccessHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/AuthenticationSuccessHandler.html]

h4. Configuration for TRANSPARENT filter

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.filter.transparent.processUrl | not set
grails.plugins.springsecurity.facebook.filter.transparent.failureHandler | not set
grails.plugins.springsecurity.facebook.filter.transparent.successHandler | not set
{table}

 * if @filter.transparent.processUrl@ is not then, then default @filter.processUrl@ will be used
 * @failureHandler@ - a name of the bean that implements [AuthenticationFailureHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/AuthenticationFailureHandler.html]
 * @successHandler@ - a name of the bean that implements [AuthenticationSuccessHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/AuthenticationSuccessHandler.html]

h4. Configuration for COOKIEDIRECT filter

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.filter.cookieDirect.processUrl | not set
grails.plugins.springsecurity.facebook.filter.cookieDirect.failureHandler | not set
grails.plugins.springsecurity.facebook.filter.cookieDirect.successHandler | not set
{table}

 * if @filter.cookieDirect.processUrl@ is not then, then default @filter.processUrl@ will be used
 * @failureHandler@ - a name of the bean that implements [AuthenticationFailureHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/AuthenticationFailureHandler.html]
 * @successHandler@ - a name of the bean that implements [AuthenticationSuccessHandler|http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/web/authentication/AuthenticationSuccessHandler.html]

h4. Configuration for JSON filter

{table}
*Name* | *Default Value*
grails.plugins.springsecurity.facebook.filter.json.processUrl | '/j_spring_security_facebook_json'
{table}
